version: '3.3'

services:
   nginx:
      image: nginx:latest
      ports:
         - ${NGINX_HTTP}:80
         - ${NGINX_HTTPS}:443
      volumes:
         - ./nginx.conf:/etc/nginx/conf.d/default.conf
         - web-root:/var/www/html
         - certbot-etc:/etc/letsencrypt
         - certbot-var:/var/letsencrypt
         - dhparam:/etc/ssl/certs
      networks:
         - frontend

   certbot:
      image: certbot/certbot
      volumes:
         - certbot-etc:/etc/letsencrypt
         - certbot-var:/var/letsencrypt
         - web-root:/var/www/html
      depends_on:
         - nginx
      command: certonly --webroot --webroot-path=/var/www/html --email daveds1996@yahoo.com --agree-tos --no-eff-email --force-renewal -d ${HOST}.com

   auth-postgres:
      image: postgres:14.2
      environment:
         - POSTGRES_USER=postgres
         - POSTGRES_PASSWORD=postgres
         - POSTGRES_DB=auth
      ports:
         - ${AUTH_DB_PORT}:5432
      networks:
         - auth_backend
      volumes:
         - ./sql/auth:/docker-entrypoint-initdb.d/
         - data:/var/lib/postgres/data

   app-postgres:
      image: postgres:14.2
      environment:
         - POSTGRES_USER=postgres
         - POSTGRES_PASSWORD=postgres
         - POSTGRES_DB=gameSchedule
      ports:
         - ${APP_DB_PORT}:5432
      networks:
         - app_backend
      volumes:
         - ./sql/app:/docker-entrypoint-initdb.d/
         - data:/var/lib/postgres/data

   share-redis:
      build:
         context: .
         dockerfile: ./Dockerfiles/Dockerfile-share-redis
      environment:
         - REDIS_DB=0
      ports:
         - ${REDIS_DB_PORT}:6379
      networks:
         - share_backend
      volumes:
         # - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
         - data:/var/lib/redis/data

   web:
      build:
         context: .
         dockerfile: ./Dockerfiles/Dockerfile-web
      image: gameschedule-web
      ports:
         - ${WEB_PORT}:3000
      networks:
         - frontend

   auth:
      build:
         context: .
         dockerfile: ./Dockerfiles/Dockerfile-auth
      image: gameschedule-auth
      ports:
         - ${AUTH_PORT}:3000
      networks:
         - frontend
         - auth_backend
      depends_on:
         - auth-postgres

   app:
      build:
         context: .
         dockerfile: ./Dockerfiles/Dockerfile-app
      image: gameschedule-app
      ports:
         - ${APP_PORT}:3000
      networks:
         - frontend
         - app_backend
      depends_on:
         - app-postgres
   
   share-app:
      build:
         context: .
         dockerfile: ./Dockerfiles/Dockerfile-share-app
      image: gameschedule-share-app
      ports:
         - ${SHARE_PORT}:3000
      networks:
         - frontend
         - share_backend
      depends_on:
         - share-redis
volumes:
   data:
   certbot-etc:
   certbot-var:
   web-root:
      driver: local
      driver_opts:
         type: none
         device: /home/trx/gameSchedule/temp
         o: bind
   dhparam:
      driver: local
      driver_opts:
         type: none
         device: /home/trx/gameSchedule/dhparam
         o: bind
   
networks:
   frontend:
      driver: bridge
   auth_backend:
      driver: bridge
   app_backend:
      driver: bridge
   share_backend:
      driver: bridge